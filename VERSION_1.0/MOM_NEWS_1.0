                           MOM_NEWS    (for version 1.0)
 ========= ========= ========= ========= ========= ========= ========= =========
12/05/90: Release date for GFDL MOM 1.0 is Dec 5, 1990
 ========= ========= ========= ========= ========= ========= ========= =========
12/14/90: Bug report: affects subroutine "unesco" in "denscoef.F"
          Bug description: An incorrect version of the subroutine used for
     the UNESCO equation of state was mistakenly included in the 5 DEC 1990
     release of the MOM code.  Variables "kw", "ksto" and "kstp" were
     incorrectly left as integers, rather than floating point numbers.
          Bug impact: Errors would be introduced from integer truncation in
     the computation of the polynomial coefficients generated by program
     "eqstat" and used in subroutine "state" of the model if the default was
     accepted (i.e., the "knudsen" ifdef option had not been set).  No errors
     if "knudsen" was set.
          Bug fix:  Short-term ... users should change all occurences of
     variables "kw", "ksto" and "kstp" to "xkw", "xksto" and "xkstp" in their
     local copies of subroutine "unesco" in "denscoef.F".
     Long term ...  A fixed version of subroutine "unesco" will be put in the
     next release of MOM.  (thanks to Paul Schopff)
 ========= ========= ========= ========= ========= ========= ========= =========
02/01/91: Bug report: Typo in subroutine "checks" concerning isopycmix.
          Bug description: Commas were omitted from lines used to warn
     of possible lateral diffusive criteria problems when the "isopycmix"
     option is defined.
          Bug impact: Code will not compile when "isopycmix" is defined.
          Bug fix:  Short-term ... users should add a comma to column
     seven of two lines in subrountine "checks" as indicated below...
 - - - - - - - - - - - - - - - - -
# ifdef isopycmix
     $  '==> Warning: lateral diffusive criteria exceeded for "ah" +  '
     $  '             "ahisop". use a smaller "dtts", "dtxcel", and/or'
     $  '             "ah" + "ahisop"                                 '
# else
 - - - - - - - - - - - - - - - - -
 ... should be ...
 - - - - - - - - - - - - - - - - -
# ifdef isopycmix
     $  '==> Warning: lateral diffusive criteria exceeded for "ah" +  '
     $, '             "ahisop". use a smaller "dtts", "dtxcel", and/or'
     $, '             "ah" + "ahisop"                                 '
# else
 - - - - - - - - - - - - - - - - -
     Long term ... This correction will be put in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
02/01/91: Bug report: Typo in "slabs.h" concerning "isopycmix".
          Bug description: The arrays "Tisox" and "Tisoy" were improperly
     dimensioned in  "task common /terms/".  Two "i"'s  should be "imt"'s,
     and two "k"'s  should be "km"'s.
          Bug impact: Code would not compile if both the "isopycmix" and
     "keepterms" were defined.
          Bug fix:  Short-term ... users should edit "slabs.h" and replace
     the (i,k) dimensions with (imt,km) as indicated below...
 - - - - - - - - - - - - - - - - -
#ifdef keepterms
      task common /terms/
     $               UTx(imt,km), VTy(imt,km), WTz(imt,km)
#ifdef isopycmix
     $,              Tisox(i,k), Tisoy(i,k), Tisoz(imt,km)
#else
 - - - - - - - - - - - - - - - - -
 ... should be ...
#ifdef keepterms
      task common /terms/
     $               UTx(imt,km), VTy(imt,km), WTz(imt,km)
#ifdef isopycmix
     $,              Tisox(imt,km), Tisoy(imt,km), Tisoz(imt,km)
#else
 - - - - - - - - - - - - - - - - -
     Long term ... This correction will be put in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
02/01/91: Bug report: Sample "printout" - "ocean.in" - "cray_run" mismatch.
          Bug description: Somehow we slipped up when copying files to the
     anonymous ftp directory and the wrong "ocean.in" showed up.  Because
     of this, users would not be able to reproduce the sample "printout"
     with the sample "ocean.in" file.  Sorry for the confusion.
          Bug impact: The MOM code would not execute properly with the sample
     "ocean.in" file.
         Bug fix:  The namelist variable "ahisop" needs to be deleted from
     the "eddy" namelist in "ocean.in" for MOM to run with the options set
     as in the sample "cray_run" file. Also, "eb" needs to be .true. to
     match the sample "printout".  So the "ocean.in" file we actually used
     to create the sample "printout" looked like this...
 - - - - - - - - - - - - - - - - -
 &contrl init=.true., days=20.0, dgnstc=20.0, tsi=1.0,
         nmix=17, eb=.true., restrt=.false.,
         ncon=1, travg=8.0,  &end
 &eddy am=1.e9, ah=2.e7, fkpm=20.0, fkph=1.0, aidif=1.0, &end
 &tsteps dtts=86400., dtuv=3600., dtsf=3600.,&end
 &parms mxscan=100, sor=1.60, crit=.1e9, acor=0.0,&end
 &iland  alonis = 250.0, 130.0,  alatis=-85.0, -25.0, &end
 - - - - - - - - - - - - - - - - -
      ...this corrected "ocean.in" file has been placed in our anonymous
      ftp directory.  Users can either copy it from there or from the above
      lines, when trying to duplicate the sample printout.
      (thanks to Warren Lee)
 ========= ========= ========= ========= ========= ========= ========= =========
02/01/91: Sample "ocean.in" file for GFDL MOM 1.0 replaced in our anonymous
      ftp directory.  See previous bug report entry for more details.
 ========= ========= ========= ========= ========= ========= ========= =========
02/01/91: Bug report: Reading in vertical region masks is ineffective.
          Bug description: User supplied vertical region masks ("mskvr")
     that are read in from file "regionmasks" do not override the hard-wired
     default values (vertical region masks read from file "regionmasks"
     are ignored).
          Bug impact: When the "readrmsk" option is defined, the hard-wired
     default values of "mskvr" set in program "ocean" can not be overridden
     without making code changes.  The regions used in calculating term
     balance diagnostics therefore could not be customized as advertised.
     The horizontal region masks ("mskhr") are not affected by this bug.
         Bug fix:  Short term... Users need to make code changes in program
     "ocean" and subroutine "reg1st". In program ocean, a "#endif" associated
     with a "#ifdef readrmsk" must be move from being immediately after the
     "200   continue" line to immediately after the "290   continue" line.
     So...
 - - - - - - - - - - - - - - - - -
200   continue
#endif
c
c     set up the vertical regions:
 - - - - - - - - - - - - - - - - -
 ...should be...
 - - - - - - - - - - - - - - - - -
200   continue
c
c     set up the vertical regions:
 - - - - - - - - - - - - - - - - -
 ...and...
 - - - - - - - - - - - - - - - - -
        do 280 k=ks,ke
          mskvr(k) = n
280     continue
290   continue
 - - - - - - - - - - - - - - - - -
 ...should be...
 - - - - - - - - - - - - - - - - -
        do 280 k=ks,ke
          mskvr(k) = n
280     continue
290   continue
#endif
 - - - - - - - - - - - - - - - - -
    Two changes are needed in subrountine "reg1st".  First, immediately
    before the return statement, code should be added to correctly set
    the "llvreg" array (level limits for defining vertical regions) when
    region masks are being read in.  So...
 - - - - - - - - - - - - - - - - -
              read (nunit) hregnm, vregnm
            endif
          endif
        endif
c
      return
 - - - - - - - - - - - - - - - - -
 ...should look like this...
 - - - - - - - - - - - - - - - - -
             read (nunit) hregnm, vregnm
            endif
          endif
        endif
c
c       if vertical masks were read in, set level limits for defining
c       vertical regions in term balance calculations
c
        if (rmask) then
          do 1100 i=1,nvreg
            settop = .false.
            setbot = .false.
            do 1090 k=1,km
              kk = km-k+1
              if (mskvr(k)  .eq. i .and. .not. settop) then
                llvreg(i,1) = k
                settop = .true.
              endif
              if (mskvr(kk) .eq. i .and. .not. setbot) then
                llvreg(i,2) = kk
                setbot = .true.
              endif
1090        continue
1100        continue
        endif
c
      return
 - - - - - - - - - - - - - - - - -
     To accomodate the two new logical variables, changes are made near the
     top of subroutine "reg1st", so...
 - - - - - - - - - - - - - - - - -
c  rmask = switch to read horizontal region masks field from specified
c          unit
c
      logical  wrform, wrvol, wrk, wrmask, rmask
c
      dimension ncol(imt)
 - - - - - - - - - - - - - - - - -
 ...should now be...
 - - - - - - - - - - - - - - - - -
c  rmask = switch to read horizontal region masks field from specified
c          unit
c  settop, setbot = used in defining level limits for vertical regions
c
      logical  wrform, wrvol, wrk, wrmask, rmask
      logical  settop, setbot
c
      dimension ncol(imt)
 - - - - - - - - - - - - - - - - -
     Long term ... This correction will be put in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
02/01/91: Bug report: Possible term balance divides by zero.
          Bug description: No allowances were made in the MOM code to handle
     the situation where certain combinations of vertical region masks "mskvr"
     and model topography ("kmt" and "kmu") can result in subsurface subregions
     used in term balance calculations having zero volumes ("volt" and "volu")
     and areas ("areat" and "areau").  In such cases the MOM code will fail in
     subroutine "diag2" where divisions by zero would be done.
          Bug impact: The code will fail in subroutine "diag2" for certain
     combinations of region masks and model topographies.
          Bug fix:  Short-term ... A quick fix can be put in place by adding
     a do loop to program ocean in which "areat", "areau", "volt" and "volu"
     values of zero are set to a very small number "epsln", thus preventing
     fatal errors from divides by zeroes.  So...
 - - - - - - - - - - - - - - - - -
500   continue
c
      do 600 mask=1,nhreg
 - - - - - - - - - - - - - - - - -
 ...should become...
 - - - - - - - - - - - - - - - - -
500   continue
c
c     prevent possible divides by zero in subroutine diag2 by replacing
c     regions with zero areas or volumes with very small values
c
      do 550 n=0,numreg
        if (areat(n) .eq. c0) areat(n) = epsln
        if (areau"(n) .eq. c0) areau(n) = epsln
        if (volt(n)  .eq. c0) volt(n)  = epsln
        if (volu(n)  .eq. c0) volu(n)  = epsln
550   continue
c
      do 600 mask=1,nhreg
 - - - - - - - - - - - - - - - - -
     Long term ... A more graceful correction that involves somewhat more
     extensive code changes will be put in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
04/24/91: Bug report: Errors in term balance calculations for some subregions.
          Bug description:  An error arises from inadequate if tests, which
     have the effect of combining regions with a horizontal mask "mskhr" of
     zero with regions with a horizontal mask equal to "nhreg".  The subregion
     volumes "volu" and "volt" calculated in program "ocean", and the "termbt"
     and "atwv" variables computed in subroutine tracer, can be incorrect for
     subregion numbers that are even multiples of the parameter "nhreg" (the
     number of horizontal regions). This results in errors in the term balances
     reported for the subregions having a horizontal mask equal to "nhreg".
          Bug impact: Term balances reported as being for subregions with a
     horizontal mask equal to "nhreg" (subregions "nhreg", "nhreg"*2, ...
     "nhreg"*"nvreg") are actually calculated over regions where "mskhr" is
     either "nhreg" or zero.  So, the bug only appears if some ocean (non-land)
     grid points were given horizontal masks of zero.  Term balances for
     subregions with a horizontal mask "mskhr" of 1 through "nhreg"-1 are not
     affected by this error.  The model integration is not affected by this
     bug in the diagnostics.
          Bug fix:  Short-term ... modify two if tests.  One appears in program
     "ocean", and the other in subroutine "tracer"  Inside the do 480 loop in
     program "ocean"...
 - - - - - - - - - - - - - - - - -
              n = nhreg*(mskvr(k)-1) + mask
              if (n .gt. 0) then
                volt(n) = volt(n) +  dvolt
 - - - - - - - - - - - - - - - - -
 ...should become...
 - - - - - - - - - - - - - - - - -
              n = nhreg*(mskvr(k)-1) + mask
              if (n .gt. 0 .and. mask .gt. 0) then
                volt(n) = volt(n) +  dvolt
 - - - - - - - - - - - - - - - - -
 ...and in the do 1080 loop of subroutine "tracer"
 - - - - - - - - - - - - - - - - -
                    n      = nhreg*(mskvr(k)-1) + mskhr(i,j)
                    if (n .gt. 0) then
                      termbt(k,2,m,n) = termbt(k,2,m,n) + sutx
 - - - - - - - - - - - - - - - - -
 ...should become...
 - - - - - - - - - - - - - - - - -
                   n      = nhreg*(mskvr(k)-1) + mskhr(i,j)
                    if (n .gt. 0 .and. mskhr(i,j) .gt. 0) then
                      termbt(k,2,m,n) = termbt(k,2,m,n) + sutx
 - - - - - - - - - - - - - - - - -
     Long term ...  These fixeds will be included  in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
04/24/91: Bug report: Problem restarting from disk.
          Bug description:  A restart problem can occur when using an IO
     option other than "diskless (i.e., when "fio" or "crayio" are defined).
     All j=1..jmt rows for all time levels are initialized on the very first
     timestep of a model integration in subroutine "ocn1st".  However, only
     two time levels (rows j=1..jmt) are written out by "wrrest" when writing
     a restart file at the end of the run.  When restarting, rows j=1..jmt
     for time levels tau & tau-1 are read by "rdrest".  During the model
     integration, the tau+1 disk is set only for rows j=2..jmt-1 (inside the
     do 700 jrow loop in subroutine "step").  So, depending upon the number
     of timesteps that have been executed during a single job, it is possible
     to stop at a point where "wrrest" will write rows j=1 and j=jmt from
     the uninitialized portions of disk.  Restarting will then be a problem,
     because "rdrest" will attempt to use those unititialized rows.
          Bug impact:  Sometimes restarting the model with the "fio" or
     "crayio" options defined will fail.
          Bug fix:  Short-term ... modify file "restio.F" in two places
     under the "rdrest" entry point to make sure that the slabs for rows j=1
     and j=jmt are initialized for all three disk datasets.
 - - - - - - - - - - - - - - - - -
      ndisk  = mod(itt  ,ntlev) + 1
      ndiska = mod(itt+1,ntlev) + 1
 - - - - - - - - - - - - - - - - -
 ... should be replaced by ...
 - - - - - - - - - - - - - - - - -
      ndiskb = mod(itt+2,ntlev) + 1
      ndisk  = mod(itt  ,ntlev) + 1
      ndiska = mod(itt+1,ntlev) + 1
 - - - - - - - - - - - - - - - - -
 ... and in the do 100 loop...
- - - - - - - - - - - - - - - - -
       call oput (labs(ndisk), nslab, (j-1)*nslab+1, bufsl)
 - - - - - - - - - - - - - - - - -
 ... should be replaced by ...
 - - - - - - - - - - - - - - - - -
       call oput (labs(ndisk), nslab, (j-1)*nslab+1, bufsl)
       if (j .eq. 1 .or. j .eq. jmt) then
         call oput (labs(ndiskb), nslab, (j-1)*nslab+1, bufsl)
       endif
 - - - - - - - - - - - - - - - - -
     Long term ... This correction will be put in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
04/24/91: Bug report: Program "depths" can generate a bad data statement for
     the "thick.h" file.
          Bug description: A problem occurs in the "depths" program when
     the number of vertical levels ("km") is not a multiple of 5. An extra
     comma appears appears at the end of the data statement in the "thick.h"
     file produced by the program.
          Bug impact:  When compiling the MOM model, an error will result
     from the invalid data statement when using "thick.h" files generated by
     program "depth", if "km" is not an even multiple of 5.
          Bug fix:  Short-term ... Users can either edit the "thick.h" files
     produced by program "depths" to remove the extra comma, or make the
     following code changes to file "depths.f"
     In subroutine "depths.f" add the following line...
 - - - - - - - - - - - - - - - - -
      character*67 string
 - - - - - - - - - - - - - - - - -
      In the do 700 loop  of "depths.F" ...
 - - - - - - - - - - - - - - - - -
          write(40,1959) (thick(k),k=ks,ke)
 - - - - - - - - - - - - - - - - -
      should be replaced by ...
 - - - - - - - - - - - - - - - - -
          write(40,1959) (thick(k),k=ks,ke)
          write (string,1959) (thick(k),k=ks,ke)
 - - - - - - - - - - - - - - - - -
      Also, after "701 continue"  add the following...
 - - - - - - - - - - - - - - - - -
c
c       remove trailing comma from last line if present. note: string
c       is character*67 to match format 1959.
c
        do 800 l=67,7,-1
          if (string(l:l) .ne. ',' .and. string(l:l) .ne. ' ') go to 801
          if (string(l:l) .eq. ',') then
            string(l:l) = ' '
            backspace 40
            write (40,'(a67)') string
          endif
800     continue
801     continue
c
 - - - - - - - - - - - - - - - - -
     Long term ... A new depths program will likely be introduced with the
     next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
04/24/91: Bug report:  Improper flag used in writing of namelist documentation.
          Bug description: A problem occurs in the "docmnt" subroutine when
     writing out namelist information intended to help describe and document
     a configuration of the MOM model.  A typo leads to the wrong logical
     variable being used as a flag for determining when the "cntrl2" namelist
     information (containing the larger, dimensioned, data) is written out.
     The flag "wrc0" is improperly used instead of "wrc2".
          Bug impact: Users do not have the advertised control of which
     parts of the namelist documentation are to be written out when calling
     "docmnt".  The large "cntrl2" namelist is written when "wrc0" is true,
     but not when "wrc2" is true.
          Bug fix:  Short-term ... users should edit one line of the code
     in subrountine "docmnt" as indicated below...
 - - - - - - - - - - - - - - - - -
       if (wrc0) then
        write (nunit,cntrl2)
      endif
 - - - - - - - - - - - - - - - - -
 ... should be ...
 - - - - - - - - - - - - - - - - -
      if (wrc2) then
        write (nunit,cntrl2)
      endif
 - - - - - - - - - - - - - - - - -
     Long term ... This correction will be put in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
09/30/91: Date of e-mail message containing miscellanous notes about MOM.
     The following is a brief summary of the e-mail message's contents:
     (1)    We currently have a total of 97 registered users of MOM who
     we know how to reach via e-mail. Not bad for code that was released just
     about 10 months ago.  Although we do not know how many of the registered
     users are actively using MOM, nor do we know how many other, anonymous
     users are out there around the world, the growing size of the MOM user
     base should be good news for us all.  As the numbers grow, we hope that
     the MOM user community will benefit from an exchange of ideas concerning
     the code itself, and the science that it is used to explore. ...
     So, please let us know if you have developed a module or modification to
     MOM that may be of interest to the larger ocean modeling community.
     (2)    In the next few weeks copies of "The G.F.D.L Modular
     Ocean Model Users Guide" will be available for distribution.  The
     document will be available over the network as a postscipt file.
     If you can not sucessfully print the file, we can have a hardcopy
     version mailed to you.  While certainly not exhaustive, this first
     version of the Users Guide will serve as a stepping stone for future
     versions that will be enlarged and more comprehensive.
     Researchers using the MOM code should reference the model and the
     Users Guide as follows...
       Pacanowski, R., K. Dixon and A. Rosati, "The G.F.D.L Modular
       Ocean Model Users Guide version 1.0", GFDL Ocean Group Technical
       Report #2, (1991).
     (3)    We are pleased to note that on May 9-10, 1991 the First
     International SW (Canada) - NW (US) Meeting of GFDL Modular Ocean Model
     Users (FISWNWMMOMU ?) was held at the Institute of Ocean Sciences,
     Sidney, B.C. and Royal Roads Military College, Victoria, B.C., Canada. ...
     A brief summary of the meeting (400 lines) has been assembled by Greg
     Holloway of IOS in Sidney, BC and C.J. Beegle of the Univ. of Washington.
     If you would like to have a copy, let us know, and we will e-mail you one.
     (4)    M.O.M. is looking to the future.  We expect to have a few more
     major options put into the code for MOM's next release, but we do not
     have an expected release date (not too soon).  And the GFDL MOMers have
     begun code development collaborations with folks working under the CHAMPS
     banner at Los Alamos.  This effort is pointing towards future MOM codes
     that will take advantage of Fortran 90, with an eye towards porting to
     massively parallel machines.
     (5)   Concerning attempts to replicate the sample MOM run provided...
     A few users have noted that on certain machines the algorithm used to
     compute land/sea borders for the idealized world topography in topog.F
     will not give the same results as our Cray Y-MP example.  It is a
     truncation/roundoff/precision type of problem.  So if you can not
     seem to replicate our sample printout, check the surface area and volume
     numbers first.  It may be that there is a tropical Asian gridpoint
     that is not sure if it is land or sea.
     (6)    We have new e-mail addresses (listed below).  Mail sent to the
     old xx@gfdl.princeton.edu addresses may or may not be forwarded to us,
     so it is best to use the new gfdl.gov address suffix.
       kd@gfdl.gov     Keith Dixon
       rcp@gfdl.gov    Ron Pacanowski
       ar@gfdl.gov     Tony Rosati
 ========= ========= ========= ========= ========= ========= ========= =========
10/21/91: Bug report: Error in convective adjustment code in "tracer.F"
     when the "dtxcel" variable varies with depth.
          Bug description: In the 5 DEC 1990 release of the MOM code, the
     effects of accelerating the abyssal processes by varying the length of
     the tracer timestep with depth was omitted from the convection code
     found within the do 1400 loop of "tracer.F".  See file "accel.h" for
     more details and a reference concerning this technique.
          Bug impact: Errors would be introduced in regions of free convection
     if "dtxcel" was set to vary with depth, AND the "implicitvmix" code
     option was NOT defined.  When varied from 1.0, "dtxcel" is usually set to
     increase with increasing depth.  By ignoring the effect on convection of
     having longer tracer timesteps at deeper levels, the model would converge
     toward an incorrect equilibrium state (one in which the deeper waters
     would likely be less dense than they should be, since advection and
     diffusion processes are effectively occurring at a more rapid rate than
     the convection code.  If an equilibrium state was achieved when using
     "dtxcel" values that vary with depth, and then "dtxcel" was set to 1.0
     at all levels, the model would drift toward a new equilibrium state.
     These errors would not be found in applications of MOM in which "dtxcel"
     was set to 1.0 (or another constant) for all k-levels -OR- if the
     by selecting the "implicitvmix" code option, the convection code found
     in the do 1400 loop in "tracer.F" had been bypassed.  The default case
     would not exhibit an error, since "dtxcel" was set to 1.0 for all
     k-levels in "blkdta.F".
          Bug fix:  Short-term ... the bug is remedied by editing the files
     "accel.h", "setgrid.F" and "tracer.F" as described below:
       First, two new variables need to be added to the common block /accel/
     in file "accel.h"  So, after...
 - - - - - - - - - - - - - - - - -
c     dtxcel   = model level dependent tracer timestep multipliers
 - - - - - - - - - - - - - - - - -
      ...add the following lines of comments...
 - - - - - - - - - - - - - - - - -
#ifndef implicitvmix
c     dztxcl   = layer thickness divided by the timestep multiplier
c                (needed for convection code)
c     dzwxcl   = multiplication factor relating to the vertical
c                distance between ts points, scaled according
c                to timestep multipliers for use in convection code
#endif
 - - - - - - - - - - - - - - - - -
      ...and then after...
 - - - - - - - - - - - - - - - - -
      common /accel/ dtxcel(km)
 - - - - - - - - - - - - - - - - -
      ...add the two new variables to the common block, by adding the lines...
 - - - - - - - - - - - - - - - - -
#ifndef implicitvmix
     $,              dztxcl(km), dzwxcl(km)
#endif
 - - - - - - - - - - - - - - - - -
     Secondly, we turn to file "setgrid.F", where the two new variables
     will be set.  So, after...
 - - - - - - - - - - - - - - - - -
        dxu4r(i) = p25/dxu(i)
1000  continue
c
 - - - - - - - - - - - - - - - - -
     ...add the lines...
 - - - - - - - - - - - - - - - - -
#ifndef implicitvmix
c     for convection code, compute values needed to include effects
c     of tracer timestep acceleration on effective layer thicknesses
c
      do 1100 k=1,km
        dztxcl(k) = dzt(k)/dtxcel(k)
1100  continue
c
      do 1200 k=1,kmm1
        dzwxcl(k) = c1/(dztxcl(k)+dztxcl(k+1))
1200  continue
      dzwxcl(km) = c0
c
#endif
 - - - - - - - - - - - - - - - - -
     ...Lastly, in "tracer.F", inside the "do 1350 i=istart,iend" loop,
     replace the lines...
 - - - - - - - - - - - - - - - - -
                          ta(i,k,m)   = (dzt(k)*ta(i,k,m) +
     $                                  dzt(k+1)*ta(i,k+1,m))*dzw2r(k)
 - - - - - - - - - - - - - - - - -
      ...with the code that accounts for the acceleration with depth...
 - - - - - - - - - - - - - - - - -
                          ta(i,k,m) = (dztxcl(k)  *ta(i,k,m) +
     $                                 dztxcl(k+1)*ta(i,k+1,m))
     $                                 *dzwxcl(k)
 - - - - - - - - - - - - - - - - -
     Long term ...  This fixed will appear in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
10/21/91: Bug report: Error in isopycnal slope check in "isopyc.F"
     when "dtxcel" varies with depth.
          Bug description: In the 5 DEC 1990 release of the MOM code, the
     effects of varying the length of the tracer timestep with depth (see
     variable "dtxcel") was neglected when comparing the model predicted
     isopycnal slopes to the variable "slmxr".  As noted in "isopyc.F", users
     should select "slmxr" after considering the numerical constraint:
     slmxr > sqrt(4*ahisop*dt/dx*dz), where dt represents the tracer timestep.
     Checks done in "isopyc.F" using the variable "chkslp" did not include an
     adjustment to account for when "dt" effectively varies with depth via
     the use of non-uniform "dtxcel(k)" values.
          Bug impact: The checks of the isopycnal slopes being performed in
     "isopyc.F" were not representing the appropriate numerical constraint
     if "dtxcel" varied with depth.  When corrected with the fix provided,
     the constraint is applied correctly, and is more stringent than was
     the case with the bug when "dtxcel(k)" > 1.0.  No error occur if the
     "isopycmix" code option was not defined -OR- if "dtxcel" was set
     to 1.0 for all k-levels.  Applying the bug fix will make the code
     consistent with that distributed by Mike Cox for earlier GFDL ocean
     model codes.
          Bug fix:  Short-term ... the bug is remedied by editing the files
     "accel.h", "ocean.F" and "isopyc.F" as described below:
        First, a new variable needs to be added to the common block /accel/
     in file "accel.h"  So, after...
 - - - - - - - - - - - - - - - - -
c     dtxcel   = model level dependent tracer timestep multipliers
 - - - - - - - - - - - - - - - - -
     ...add the lines...
 - - - - - - - - - - - - - - - - -
 #ifdef isopycmix
c     dtxsqr   = square root of "dtxcel" (used in computation of
c                maximum slope constraint for isopycnal mixing)
#endif
 - - - - - - - - - - - - - - - - -
      ...and then after...
 - - - - - - - - - - - - - - - - -
      common /accel/ dtxcel(km)
 - - - - - - - - - - - - - - - - -
      ...add the new variable to the common block, by adding the lines...
 - - - - - - - - - - - - - - - - -
#ifdef isopycmix
     $,              dtxsqr(km)
#endif
 - - - - - - - - - - - - - - - - -
        Secondly, add code to compute the new variable.  So, in file
     "ocean.F', after...
 - - - - - - - - - - - - - - - - -
     write (stdout,9601) (dtxcel(k),k=1,km)
 - - - - - - - - - - - - - - - - -
     ...add the lines...
 - - - - - - - - - - - - - - - - -
#ifdef isopycmix
c
c-----------------------------------------------------------------------
c     store the square root of the tracer timestep acceleration values
c     into variable "dtxsqr" for use in isopycnal mixing
c-----------------------------------------------------------------------
c
      do 2550 k=1,km
       dtxsqr(k) = sqrt(dtxcel(k))
2550  continue
#endif
 - - - - - - - - - - - - - - - - -
     ...Next, in "isopyc.F" three lines of code need to be replaced,
     in order to use the new variable and apply the correct numerical
     constraint to the isopycnal slopes. So, replace all three occurences
     (one each in the do 1190, do 1490, and do 1790 loops) of the line...
 - - - - - - - - - - - - - - - - -
          chkslp = -sqrt (e(i,k,1)**2 + e(i,k,2)**2) * slmxr
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
          chkslp = -sqrt (e(i,k,1)**2 + e(i,k,2)**2) * slmxr * dtxsqr(k)
 - - - - - - - - - - - - - - - - -
     ...and lastly, add "accel.h" to "isopyc.F", otherwise "dtxsqr(k)" is
     not defined in subroutine isop0. So, after...
 - - - - - - - - - - - - - - - - -
     c   References:
c     Cox, M.D., 1987, Isopycnal diffusion in a z-coordinate model,
c       Ocean Modelling, issue 74, 1-5.
c     Redi, M.H., 1982, Oceanic isopycnal mixing by coordinate rotation,
c       J. Phys. Oceanogr., vol 12, 1154-1158, 1982.
c
c=======================================================================
c
#include "param.h"
 - - - - - - - - - - - - - - - - -
     ...add the line...
 - - - - - - - - - - - - - - - - -
#include "accel.h"
 - - - - - - - - - - - - - - - - -
     Long term ...  This fixed will appear in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
10/21/91: Bug report: Error in the definition of the finite difference
     "Tisox" in the file "fdift.h".
          Bug description: In the 5 DEC 1990 release of the MOM code, a
     typographical error caused and incorrect subscript to be used for
     variable "dxtr" when "Tisox(i,k)" is being defined for the "isopycmix"
     code option.  (The vertical index "k" was erroneously used instead of
     the longitudinal index "i")
          Bug impact: If the longitudinal grid spacing of a MOM application
     is not uniform ("dxt(i)" varies with "i"), errors are introduced
     when calculating the mixing of tracers along isopycnal slopes.
     No error is introduced if either the "isopycmix" option is not defined
     -OR- if "dxt(i)" is constant across the model's longitudinal domain.
          Bug fix:  Short-term ... the bug is corrected by replacing one
     line of code in the file "fdift.h".  Replace...
 - - - - - - - - - - - - - - - - -
      Tisox(i,k) =  (e(i,k,1) - e(i-1,k,1))*dxtr(k)*cstr(j)
 - - - - - - - - - - - - - - - - -
     ...with the line...
 - - - - - - - - - - - - - - - - -
      Tisox(i,k) =  (e(i,k,1) - e(i-1,k,1))*dxtr(i)*cstr(j)
 - - - - - - - - - - - - - - - - -
     Long term ...  This fixed will appear in the next release of MOM.
      (thanks to Peter McIntosh and Matthew England)
 ========= ========= ========= ========= ========= ========= ========= =========
08/11/93: Date of e-mail message containing miscellanous notes about MOM.
     The following is a brief summary of the e-mail message's contents:
     (1)    Release of the GFDL MOM version 1.1 code is planned for the week
     of 16 August 1993.   Version 1.1 can be considered an incremental upgrade
     to the original GFDL MOM code of 5 December 1990...one in which reported
     bugs have been corrected, but no new code options have been included.
     (2)    A completely new version of MOM (version 2.0) is NOT yet ready for
     release.  A release date has not be set yet, but the end of the 1993 or
     shortly thereafter is not an unreasonable timeframe.
     (3)    Files containing a list of MOM's registered users and their e-mail
     addresses are scheduled to be placed on GFDL's anonymous ftp server.  It
     is hoped that this list might facilitate communications between users
     and make maintaining an up-to-date e-mail listing easier.
     (4)    More than 170 people have registered as MOM users.
     (5)    Regretably, the MOM User's Guide that was described as being near
     completion some time ago has not been finished as desktop publishing has
     been forced to take a back seat to research and code development.
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: An error has been discovered in a global surface salinity dataset
  used in-house by some GFDL modelers.  A shift in the seasonal cycle was
  created during the process of interpolating in time, such that this dataset
  did not match the seasonal salinities in the original Levitus, 1982 atlas.
  Since this dataset was used to derive the salinity fields supplied as part
  of the MOM Dataset, some MOM users may be affected (those who requested
  and received this dataset from us on boundary condition data tapes).
    More specifically, the error involves the file "levitus.data" which is
  a "tar" file containing monthly salinities of the form... jan.salt.lev,
  feb.salt.lev, etc. The error is that the month prefixes "jan", "feb", etc.
  are incorrect in the sense that the data actually corresponds to 3 months
  earlier! The temperature files are correct.
    All copies distributed prior to 3/10/93 contain this error (a total of
  29 requests for the MOM dataset have been fulfilled). Just how much of an
  impact this error would have on model results depends on how the data is
  being used.  For example, If you are looking at deep convection in the
  North Atlantic and are restoring surface salinities toward seasonally
  varying "observed" values, the erroneous shift of seasons with regard
  to salinity would be quite important.
    The fix is as follows:

  1st: extract the monthly salinity fields with:

  tar xvf levitus.data *.salt.mom

  2nd: rename the files:

  mv sep.salt.lev tempsep
  mv oct.salt.lev tempoct
  mv nov.salt.lev tempnov
  mv dec.salt.lev sep.salt.lev
  mv jan.salt.lev oct.salt.lev
  mv feb.salt.lev nov.salt.lev
  mv mar.salt.lev dec.salt.lev
  mv apr.salt.lev jan.salt.lev
  mv may.salt.lev feb.salt.lev
  mv jun.salt.lev mar.salt.lev
  mv jul.salt.lev apr.salt.lev
  mv aug.salt.lev may.salt.lev
  mv tempsep jun.salt.lev
  mv tempoct jul.salt.lev
  mv tempnov aug.salt.lev

    The month counter on the salinity units should also be changed to
  be consistent with the filename changes. In file "import.F" on units 50
  through 62, after the salinity data has been read in with:

  read (...,9200) month, ...

  change  "month" to be consistent with its filename by:

  month = mod(month+8,12) + 1

  before writing the data out.

    Those users who have received data tapes with this error should simply
  make the appropriate fix locally rather than asking for a new data tape.

========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Problem when using the conjugate gradient technique
     with zero surface momentum fluxes.
          Bug description:  If the user specifies zero wind stress (surface
     momentum fluxes are stored as variable "smf" in file "cvbc.h") when
     using the conjugate gradient technique (ifdef options "congrad5pt" or
     "congrad9pt"), the transport streamfunction is identically zero with
     zero tendency.  Troublesome division by zero then occurs in the
     computation of variables "beta" and "asor" in subroutines "congr5" and
     "congr9".
          Bug impact: Division by zero and model bomb arise only if the
     "congrad5pt" or "congrad9pt" ifdef options are defined AND "smf" values
     are zero.
          Bug fix:  Short-term ... the bug is corrected by inserting the
     following logic tests to determine if "oapr" or "apr2" are zero.
     Identical modifications should be made to the "congr5.F" and "congr9.F"
     files.  First, replace the line of code reading...
 - - - - - - - - - - - - - - - - -
      if (mscan .gt. 1) beta = apr4/oapr
 - - - - - - - - - - - - - - - - -
     ...with the lines...
 - - - - - - - - - - - - - - - - -
      if (mscan .gt. 1) then
        if (oapr .ne. c0) then
          beta = apr4/oapr
        else
          beta = c0
        endif
      endif
 - - - - - - - - - - - - - - - - -
     ...and then replace the line of code reading...
- - - - - - - - - - - - - - - - -
      asor = - apr4/apr2
 - - - - - - - - - - - - - - - - -
      ...with the lines...
 - - - - - - - - - - - - - - - - -
      if (apr2 .ne. c0) then
        asor = - apr4/apr2
      else
        asor = c0
      endif
 - - - - - - - - - - - - - - - - -
     Long term ...  This fix will appear in the next release of MOM.
      (thanks to Mike Spall)
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction to a previous bug report of 02/01/91 regarding
     possible term balance divides by zero.
          Bug description: An extraneous double quotation mark appeared in
     the replacement code.
          Bug fix:
     ...replace...
 - - - - - - - - - - - - - - - - -
             if (areau"(n) .eq. c0) areau(n) = epsln
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
             if (areau(n) .eq. c0) areau(n) = epsln
 - - - - - - - - - - - - - - - - -
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction to a previous bug report of 10/21/91 regarding
     convective adjustment when the "dtxcel" variable varies with depth.
          Bug description: Part of the fix involved defining new variables
     in the common block "accel", and computing these variables in "setgrid.F"
     (specifically, subroutine grids). However, as originally written,
     subroutine grids does not include "accel.h", and thus does not have the
     intended access to the new variables "dztxcl" and "dzwxcl".
          Bug fix: add a  "#include accel.h" to subroutine grids in file
     setgrid.F as follows:
     ...replace...
 - - - - - - - - - - - - - - - - -
#include "param.h"
#include "coord.h"
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
#include "param.h"
#ifndef implicitvmix
#include "accel.h"
#endif
#include "coord.h"
 - - - - - - - - - - - - - - - - -
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction to a previous bug report of 10/21/91 regarding
     the isopycnal slope check in "isopyc.F" when "dtxcel" varies with depth.
          Bug description: A spurious space appears before a "#ifdef" in the
     replacement code applied to file "accel.h".
          Bug fix:
     ...replace...
 - - - - - - - - - - - - - - - - -
 #ifdef isopycmix
c     dtxsqr   = square root of "dtxcel" (used in computation of
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
#ifdef isopycmix
c     dtxsqr   = square root of "dtxcel" (used in computation of
 - - - - - - - - - - - - - - - - -
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Sign error in metric advective terms in subroutine
     clinic when "nohilats" option is not defined.
          Bug description: The two metric advective terms in subroutine
     clinic were given the wrong sign.  The sign for term UVtan should
     be "+" rather than "-", while "-" for term UUtan instead of "+".
     The model will not feel this error if the "nohilats" option was defined.
          Bug impact: For models run with the "nohilats" option, there was
     no impact at all.  In other cases, a small error would be introduced
     into the momentum advection terms, and would be most noticable in high
     latitudes.  Analyses of the impact of this error in the Antarctic
     circumpolar current of a model having 1 degree horizontal resolution,
     and in a coarse resolution version of MOM, indicate that there were
     negligible changes in the momentum balance.  Although the signs were
     wrong, the magnitudes of these terms are typically much smaller than
     that of the other terms.  However, one might see some effects in fine
     resolution, high latitude simulations.
          Bug fix:  Short-term ... the bug is corrected by changing the
     following lines of code in file "clinic.F".
     ...replace...
 - - - - - - - - - - - - - - - - -
#ifndef nohilats
     $                 - UVtan(i,k)
#endif
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
#ifndef nohilats
     $                 + UVtan(i,k)
#endif
 - - - - - - - - - - - - - - - - -
     ...and replace...
 - - - - - - - - - - - - - - - - -
#ifndef nohilats
     $                 + UUtan(i,k)
#endif
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
#ifndef nohilats
     $                 - UUtan(i,k)
#endif
 - - - - - - - - - - - - - - - - -
     ...also, for the term balance diagnostics, replace...
 - - - - - - - - - - - - - - - - -
#ifndef nohilats
                  termbm(k,13,1,n) = termbm(k,13,1,n)
     $                             - UVtan(i,k)*boxvol
                  termbm(k,13,2,n) = termbm(k,13,2,n)
     $                             + UUtan(i,k)*boxvol
#endif
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
#ifndef nohilats
                  termbm(k,13,1,n) = termbm(k,13,1,n)
     $                             + UVtan(i,k)*boxvol
                  termbm(k,13,2,n) = termbm(k,13,2,n)
     $                             - UUtan(i,k)*boxvol
#endif
 - - - - - - - - - - - - - - - - -
     Long term ...  This fix will appear in the next release of MOM.
      (thanks to Fei Chen, Joachim Dengg  and Jim McWilliams)
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Vertical density differences needed for isopycnal mixing
     option are not calculated for the bottommost level if there is an odd
     number of model levels in the model.
          Bug description: A do loop range error in subroutine isop0 results
     in the vertical density difference "rzp" (the density difference between
     levels "km-1" and "km") not being calculated if parameter "km" is an odd
     number. At some deep gridpoints, the calculation of the orientation of
     isopycnal surfaces, and thus the diffusion of heat, salt and other
     tracers, are affected by this bug.
          Bug impact:  Errors in the model integration will occur because of
     this bug only if the "isopycmix" option is defined, and parameter "km" is
     odd.  Under such conditions, errors in the diffusion of tracers are
     introduced at points where the model bathymetry is equal to the maximum
     value (i.e., where kmt(i,j) = km).  The exact impact of the error will
     depend upon the nature of the compiler used.  Since "rzp(i,km)" is not set
     by the code at some points, it will contain whatever value the compiler
     initializes it with when used in subsequent computations.  On some
     machines the use of an uninitialized variable results in automatic program
     termination, while on others overflow errors may result, and on still
     others the model will seem to execute normally despite the mistake in the
     isopycnal diffusion.  For cases in which the model seems to run normally,
     the severity of the impact on the model's evolution will depend upon
     variations in model bathymetry and density stratification in the lower
     levels.
          Bug fix:  Short-term ... the bug is corrected by changing a do loop
     index in subroutine isop0 (found in file "isopyc.F").  Change...
 - - - - - - - - - - - - - - - - -
      do 500 k=3,kmm1,2
        do 490 i=1,imt
          rzp(i,k) = fm(i,k-1,jp)*fm(i,k,jp)*c1e10*
     $               (tempik(i,k-1,2) - tempik(i,k,2))
490     continue
500   continue
 - - - - - - - - - - - - - - - - -
     ...to...
 - - - - - - - - - - - - - - - - -
      do 500 k=3,km,2
        do 490 i=1,imt
          rzp(i,k) = fm(i,k-1,jp)*fm(i,k,jp)*c1e10*
     $               (tempik(i,k-1,2) - tempik(i,k,2))
490     continue
500   continue
 - - - - - - - - - - - - - - - - -
     Long term ...  This will appear in the next release of MOM.
      (thanks to Peter McIntosh)
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction to comments describing grid size variables.
          Bug description: Comments describing variables "dxt" and "dxu" in
     include file "grdvar.h" are somewhat misleading in the 5 DEC 1990 release
     of the MOM code.  Since "dxt" and "dxu" are not a function of latitude
     their values, in units of centimeters, are valid only at the Equator.
     Multiplication by the cosine of the latitude is used in the model
     to account for this variation, but it is not reflected in the original
     comments.
          Bug impact: No impact on model integrations, but a potential
     source of confusion for users.
          Bug fix:  Short-term ... the bug is corrected by changing the
     comments in file "grdvar.h" from...
 - - - - - - - - - - - - - - - - -
c     dxt     = longitudinal width of "t" grid box (in cm)
 - - - - - - - - - - - - - - - - -
     ...to...
 - - - - - - - - - - - - - - - - -
c     dxt     = longitudinal width of "t" grid box at the
c               equator (in cm)
 - - - - - - - - - - - - - - - - -
     ...and change...
 - - - - - - - - - - - - - - - - -
c     dxu     = longitudinal width of "u,v" grid box (in cm)
 - - - - - - - - - - - - - - - - -
     ...to...
 - - - - - - - - - - - - - - - - -
c     dxu     = longitudinal width of "u,v" grid box at the
c               equator (in cm)
 - - - - - - - - - - - - - - - - -
     Long term ...  This will appear in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction to the diagnostic computation of the
     contribution of bottom drag (external mode) to the globally averaged
     MOM-energetics.
          Bug description: In subroutine clinic, the bottom drag diagnostics
     stored in "zuneng(i,8)" and "zvneng(i,8)" were mistakenly multiplied by
     layer thickness "dzt(kz)", thereby exaggerating their values.  Also,
     the wrong sign was prescribed.
          Bug impact: No impact on the evolution of the model integrations,
     but the energetics diagnostics were in error to due a problem in the
     bottom drag diagnostics.  If zero bottom drag was specified by the
     user, then no errors would occur.
          Bug fix:  Short-term ... the bug is corrected by changing the
     "do 2600" loop in file "clinic.F".  Replace...
 - - - - - - - - - - - - - - - - -
            do 2600 i=istart,iend
              kz = kmu(i,j)
              if (kz .ne. 0) then
                ueng(i)   = gm(i,1,jc)*bmf(i,1)
                veng(i)   = gm(i,1,jc)*bmf(i,2)
                engint(kz,8) = engint(kz,8)+(uclin(i,kz,jpt1)*ueng(i)
     $                     + vclin(i,kz,jpt1)*veng(i))*fx*dxu(i)
                zuneng(i,8)  = zuneng(i,8) + ueng(i)*dzt(kz)*hr(i,j)
                zvneng(i,8)  = zvneng(i,8) + veng(i)*dzt(kz)*hr(i,j)
              endif
2600        continue
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
            do 2600 i=istart,iend
              kz = kmu(i,j)
              if (kz .ne. 0) then
                ueng(i)   = -gm(i,1,jc)*bmf(i,1)
                veng(i)   = -gm(i,1,jc)*bmf(i,2)
                engint(kz,8) = engint(kz,8)+(uclin(i,kz,jpt1)*ueng(i)
     $                     + vclin(i,kz,jpt1)*veng(i))*fx*dxu(i)
                zuneng(i,8)  = zuneng(i,8) + ueng(i)*hr(i,j)
                zvneng(i,8)  = zvneng(i,8) + veng(i)*hr(i,j)
              endif
2600        continue
 - - - - - - - - - - - - - - - - -
     Long term ...  This will appear in the next release of MOM.
      (thanks to Joachim Dengg)
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction for a typo that causes a compilation error if
     the user mistakenly defines both the "fio" and "diskless" ifdef options.
          Bug description: In subroutine checks, a comma was omitted in a
     section of code that reports incompatibilities in the ifdef options
     selected. A compile time error thus results when "fio" and "diskless" are
     both defined, preventing the model from running and generating its own
     error message concerning the incompatible options.
          Bug impact: No impact on the model integrations, but the user
     must deal with a compile error rather than an informative message
     from MOM if both the "fio" and "diskless" options are mistakenly
     selected.
          Bug fix:  Short-term ... the bug is corrected by inserting a comma
     in one line of file "checks.F".  Replace...
 - - - - - - - - - - - - - - - - -
if defined diskless && defined fio
        write (stdout,9000)
     $  '==> Error:  "diskless" and "fio" are incompatible            '
     $  '             choose one or the other option.                 '
        errorc = .true.
#endif
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
#if defined diskless && defined fio
        write (stdout,9000)
     $  '==> Error:  "diskless" and "fio" are incompatible            '
     $, '             choose one or the other option.                 '
        errorc = .true.
#endif
 - - - - - - - - - - - - - - - - -
     Long term ...  This will appear in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Update to allow subroutine cmesh to determine whether
     variable "ndir" (passed into it as a calling argument) is a valid number.
          Bug description: In subroutine cmesh (found in file "setgrid.F"),
     variable "ndir" must take on a value of 1 or -1.  While the original MOM
     code is written such that subroutine cmesh is only called with "ndir"
     having an appropriate value, user modifications could change that, and
     no check currently exists in the code to inform the user of such an error.
          Bug impact: No impact on the model integrations unless the user
     makes code modifications which create calls to subroutine cmesh in
     which variable "ndir" is not set to have a value of 1 or -1.  Also,
     compilers may issue warning messages that variable "i" in subroutine
     cmesh might be used before it is set, since subroutine cmesh only
     computes a value for "i" when "ndir" is 1 or -1.
          Bug fix:  Short-term ... place a test in subroutine cmesh to
     assess whether variable "ndir" is a valid number, by editing file
     "setgrid.F as follows.  Replace...
 - - - - - - - - - - - - - - - - -
      do 100 ii=1,n
        if (ndir .eq. 1)  i = n+1-ii
        if (ndir .eq. -1) i = ii
        dx(i) = a + b*cos(pi*rn*(ii-p5))
100   continue
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
      do 100 ii=1,n
        if (ndir .eq. 1)  then
          i = n+1-ii
        elseif (ndir .eq. -1) then
          i = ii
        else
          write (stdout, 9009) ndir
          write (stderr, 9009) ndir
          stop ' cmesh1'
        endif
        dx(i) = a + b*cos(pi*rn*(ii-p5))
100   continue
 - - - - - - - - - - - - - - - - -
     ...and change...
 - - - - - - - - - - - - - - - - -
9000  format (/1x,'max res=',e11.4,'  min res=',e11.4,'  width=',e11.4,
     $'  number of grid boxes=',e14.7)
9010  format (/' error => non integral number of boxes in "wid"'/)
 - - - - - - - - - - - - - - - - -
     ...to...
 - - - - - - - - - - - - - - - - -
9000  format (/1x,'max res=',e11.4,'  min res=',e11.4,'  width=',e11.4,
     $'  number of grid boxes=',e14.7)
9009  format (/' error => "ndir" =',i8,' but should be 1 or -1 '/)
9010  format (/' error => non integral number of boxes in "wid"'/)
 - - - - - - - - - - - - - - - - -
     Long term ...  This will appear in the next release of MOM.
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Correction to the order of i/o operations concerning
     the writing of the model topography field "kmt" to the restart file for
     the non-diskless ("fio" or "crayio") cases.
          Bug description: Under entry point wrrest (found in file "restio.F"),
     if the "diskless" ifdef option is not selected, the "kmt" field appears
     to be written to the restart file (unit "iorest") before it is gotten
     from the disk via an "oget" call.
          Bug impact: This bug is actually benign, having no effect on the
     restart file being written, since the "kmt" field is available in memory
     to be written out ("kmt" is found in the common block associated with
     file "levind.h", which is included in subroutine restio).  However, the
     code can be confusing to the reader.
          Bug fix:  Short-term ... for clarity, reorder the "oget" call
     and the write to the restart file associated with the "kmt" topography
     field by changing file "restio.F" by replacing...
 - - - - - - - - - - - - - - - - -
      write (iorest) kmt
      call oget (kflds, nwds, 5*nwds+1, kmt)
 - - - - - - - - - - - - - - - - -
     ...with...
 - - - - - - - - - - - - - - - - -
      call oget (kflds, nwds, 5*nwds+1, kmt)
      write (iorest) kmt
 - - - - - - - - - - - - - - - - -
     Long term ...  This will appear in the next release of MOM.
      (Thanks to Jane Eert, David Post, and others.)
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Bug report: Errors in term balance calculations for some subregions.
          Bug description:  Term balance diagnostics can be incorrect for
     subregion numbers that are even multiples of the parameter "nhreg" (the
     number of horizontal regions) if some ocean (non-land) grid points were
     given horizontal masks ("mskhr") values of zero.  The errors arise from
     inadequate if tests, which have the effect of combining information from
     grid points with a horizontal mask "mskhr" of zero with regions having a
     horizontal mask equal to "nhreg".  This is a follow-up to a bug report
     dated 04/24/91, which only addressed this problem in two code locations.
          Bug impact: Term balances reported as being for subregions with a
     horizontal mask equal to "nhreg" (subregions "nhreg", "nhreg"*2, ...
     "nhreg"*"nvreg") are actually calculated over regions where "mskhr" is
     either "nhreg" or zero.  So, the bug only appears if some ocean (non-land)
     grid points were given horizontal masks of zero.  Term balances for
     subregions with a horizontal mask "mskhr" of 1 through "nhreg"-1 are not
     affected by this error.  The model integration is not affected by this
     bug in the diagnostics.  The errors are limited to variables "atwv",
     "avwv", "tvar", "termbt" and "termbm" for the subregions having a
     horizontal mask equal to "nhreg".
          Bug fix:  Short-term ... modify several if tests so that term
     term balance diagnostics are not accumulated over ocean points with a
     horizontal mask "mskhr" of 0.  The currently inadequate if tests occur
     in files "clinic.F"(10 occurrences), "diag.F"(1), and "tracer.F"(1).
     The fix in all cases is the same, and simply requires the user to replace
     the specified if tests that look like this...
 - - - - - - - - - - - - - - - - -
              if (n .gt. 0) then
 - - - - - - - - - - - - - - - - -
 ...with the following line...
 - - - - - - - - - - - - - - - - -
              if (n .gt. 0 .and. mskhr(i,j) .gt. 0) then
 - - - - - - - - - - - - - - - - -
 ...(the number of leading blanks varies).  This change needs to be made in
    the following subroutines and do loops...
      subroutine        do loop
      ----------        -------
        clinic           2320
        clinic           2330
        clinic           2340
        clinic           2350
        clinic           2360
        clinic           2370
        clinic           2380
        clinic           2390
        clinic           3420
        clinic           3440
        diag2             180
        tracer           1480
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: The sample "printout" file stored on the anonymous ftp
     server was replaced, because of answer changes brought about
     by today's bug fixes.  Also, the "ocean.in" file was replaced
     after slight modifications that more fully exercise the code.
     The contents of the new sample "ocean.in" file appears below.
     Please note that the sample case is merely meant to provide
     users with a way to check that the MOM code when run on their
     machines produces answers that are in reasonable agreement
     with our sample printout file.  The grid configuration, forcing,
     and namelist input selected for the sample case are not meant to
     yield a scientifically meaning model run.
 - - - - - - - - - - - - - - - - -
 &contrl init=.true., days=20.0, dgnstc=20.0, tsi=1.0,
         nmix=17, eb=.true., restrt=.true.,
         ncon=4, travg=8.0,  snaps=15.0, &end
 &eddy am=1.e9, ah=2.e7, fkpm=20.0, fkph=1.0, aidif=1.0, &end
 &tsteps dtts=86400., dtuv=3600., dtsf=3600.,&end
 &parms mxscan=100, sor=1.60, crit=.1e9, acor=0.0,&end
 &iland  alonis = 250.0, 130.0,  alatis=-85.0, -25.0, &end
 - - - - - - - - - - - - - - - - -
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Date of e-mail message containing miscellanous notes about MOM in
     addition to the bug reports listed above.  The following is a summary of
     the e-mail message's miscellanous notes:
     (1)    MOM version 1.1 is now available via anonymous ftp, which has
      prompted a restructuring of our anonymous ftp directories.
     (2)    The GFDL MOM users electronic mailing list is now availabile
     via anonymous ftp.
     (3)    New sample printout files have been created for users to compare
     to printouts that they produce on their own computers when running MOM's
     sample case.  Users should be aware that machine differences will likely
     prevent the printouts from matching exactly...in fact, even the sample
     case's coastlines can vary due to roundoff/precision issues.
     (4)    Comments concerning the "symmetry" ifdef option were clarified
     in the "READ_ME" file.
     (5)    With the release of the GFDL MOM version 1.1 code, version 1.0
     should be considered "frozen".  In other words, future updates will
     refer to version 1.1.  However, since version 1.1 is essentially
     version 1.0 with previous bug fixes applied, one should easily be
     able to translate messages about version 1.1 to version 1.0 code.
 ========= ========= ========= ========= ========= ========= ========= =========
08/16/93: Final entry for GFDL MOM version 1.0 "MOM_NOTES_1.0", unless
     corrections to prior bug reports are needed.  See "MOM_NOTES_1.1" for
     future updates.
 ========= ========= ========= END OF FILE ======= ========= ======= 16 AUG 1993
